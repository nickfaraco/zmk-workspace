ZMK_MACRO(select_word,
    bindings
        = <&macro_press &kp LCTRL>
        , <&macro_tap &kp LEFT>
        , <&macro_press &kp LSHFT>
        , <&macro_tap &kp RIGHT>
        , <&macro_release &kp LSHFT &kp LCTRL>
        ;
)
ZMK_MACRO(del_line,
    bindings
        = <&macro_press &kp END>
        , <&macro_press &kp LSHFT>
        , <&macro_tap &kp HOME>
        , <&macro_release &kp LSHFT>
        , <&macro_tap &kp BSPC>
        ;
)

ZMK_MACRO(dot_spc,
    wait-ms = <0>;
    tap-ms = <5>;
    bindings = <&kp DOT &kp SPACE &sk LSHFT>;
)

// Windows sleep key (fix LOCK not working on Windows)
ZMK_MACRO(win_sleep,
    wait-ms = <100>;
    tap-ms = <5>;
    bindings = <&kp LG(X) &kp U &kp S>;
)

// OS-based keymap change
ZMK_MACRO(to_pc,
    wait-ms = <100>;
    tap-ms = <5>;
    bindings = <&uc UC_SET_WIN_COMPOSE &to BASE_WIN>;
)
ZMK_MACRO(to_osx,
    wait-ms = <100>;
    tap-ms = <5>;
    bindings = <&uc UC_SET_MACOS &to BASE>;
)
ZMK_MACRO(to_linux,
    wait-ms = <100>;
    tap-ms = <5>;
    bindings = <&uc UC_SET_LINUX &to BASE_WIN>;
)

#if WIRELESS
ZMK_MACRO(pc_connect,
    wait-ms = <100>;
    tap-ms = <5>;
    bindings = <&bt BT_SEL 1 &to_pc>;
)
ZMK_MACRO(osx_connect,
    wait-ms = <100>;
    tap-ms = <5>;
    bindings = <&bt BT_SEL 0 &to_osx>;
)
#endif

ZMK_MACRO(macro_par,
    wait-ms = <0>;
    tap-ms = <5>;
    bindings = <&kp LPAR &kp RPAR &kp LEFT>;
)
ZMK_MACRO(macro_bkt,
    wait-ms = <0>;
    tap-ms = <5>;
    bindings = <&kp LBKT &kp RBKT &kp LEFT>;
)
ZMK_MACRO(macro_brc,
    wait-ms = <0>;
    tap-ms = <5>;
    bindings = <&kp LBRC &kp RBRC &kp LEFT>;
)
ZMK_MACRO(macro_euro_win,
    wait-ms = <0>;
    tap-ms = <5>;
    bindings
        = <&macro_press   &kp LALT>
        , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N2 &kp KP_N8>
        , <&macro_release &kp LALT>
        ;
)

ZMK_MACRO(macro_qu,
    bindings = <&kp Q &kp U>;
)

ZMK_MACRO(macro_chat,
    bindings = <&to BASE_WIN &kp SLASH>;
)


// Sticky shift + leader
ZMK_MACRO(leader_sft, bindings = <&sk LSHFT &leader>;)